From 321974e6ca3b1ed62f5923c3520b8d9dc07a3949 Mon Sep 17 00:00:00 2001
From: Andrew Wang <wang@apache.org>
Date: Mon, 19 Oct 2015 16:12:56 -0700
Subject: [PATCH 0926/1023] HDFS-9250. Add Precondition check to
 LocatedBlock#addCachedLoc. Contributed by Xiao
 Chen.

(cherry picked from commit 8175c4f6b9fc17ff2e0fc568d798f9b6f2487696)

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java

Change-Id: I252d3b2a3b37c9c0041539da21870416ed16b228
---
 .../apache/hadoop/hdfs/protocol/LocatedBlock.java  |    4 ++
 .../hadoop/hdfs/protocol/TestLocatedBlock.java     |   46 ++++++++++++++++++++
 2 files changed, 50 insertions(+)
 create mode 100644 hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/TestLocatedBlock.java

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
index f14c8da..fca5d61 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
@@ -20,6 +20,7 @@
 import java.util.Arrays;
 import java.util.List;
 
+import com.google.common.base.Preconditions;
 import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.classification.InterfaceStability;
 import org.apache.hadoop.hdfs.StorageType;
@@ -202,6 +203,9 @@ public void addCachedLoc(DatanodeInfo loc) {
     }
     // Not present in loc, add it and go
     cachedList.add(loc);
+    Preconditions.checkArgument(cachedLocs != EMPTY_LOCS,
+        "Cached locations should only be added when having a backing"
+            + " disk replica!", loc, locs.length, Arrays.toString(locs));
     cachedLocs = cachedList.toArray(cachedLocs);
   }
 
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/TestLocatedBlock.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/TestLocatedBlock.java
new file mode 100644
index 0000000..e349da2
--- /dev/null
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/TestLocatedBlock.java
@@ -0,0 +1,46 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hdfs.protocol;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor;
+import org.junit.Test;
+
+import static org.junit.Assert.fail;
+
+public class TestLocatedBlock {
+  public static final Log LOG = LogFactory.getLog(TestLocatedBlock.class);
+
+  @Test(timeout = 10000)
+  public void testAddCachedLocWhenEmpty() {
+    DatanodeInfo[] ds = new DatanodeInfo[0];
+    ExtendedBlock b1 = new ExtendedBlock("bpid", 1, 1, 1);
+    LocatedBlock l1 = new LocatedBlock(b1, ds);
+    DatanodeDescriptor dn = new DatanodeDescriptor(
+        new DatanodeID("127.0.0.1", "localhost", "abcd",
+            5000, 5001, 5002, 5003));
+    try {
+      l1.addCachedLoc(dn);
+      fail("Adding dn when block is empty should throw");
+    } catch (IllegalArgumentException e) {
+      LOG.info("Expected exception:", e);
+    }
+  }
+}
\ No newline at end of file
-- 
1.7.9.5

